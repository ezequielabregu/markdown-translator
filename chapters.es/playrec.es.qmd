# Rec y jugar

En este capítulo, exploraremos la relación entre la grabación y la reproducción. Veremos cómo se pueden usar estos dos procesos para crear nuevos sonidos y composiciones. También discutiremos los aspectos técnicos de la grabación y la reproducción, incluidos los equipos y las técnicas utilizadas en el proceso.
También consideraremos las implicaciones artísticas de la grabación y la reproducción, incluida la forma en que estos procesos pueden usarse para crear nuevas formas de expresión y comunicación.

## *Estoy sentado en una habitación* – Alvin Lucier

*Estoy Sentado en una hábitacia* (Alvin Lucier) consiste en una grabación de sonido de 15 minutos y 23 segundos. La pieza comienza con la voz de Lucier mientras declara que está sentado en una habitación diferente de la nuestra. Su voz temblora ligeramente mientras entrega el texto, describiendo lo que se desarrollará en los próximos 15 minutos:

> "... Estoy grabando el sonido de mi voz hablada y lo volveré a reproducir en la habitación una y otra vez ..."

![*Estoy sentado en una habitación* Diseño](/assets/images/play-rec/lucier-diagram.jpg)

Como oyentes, sabemos lo que va a suceder, pero no sabemos **cómo** sucederá [@Hasse2012]. Escuchamos, siguiendo la voz grabada de Lucier. Luego, Lucier reproduce la grabación en la habitación y la vuelve a grabar. Esta vez, comenzamos a escuchar más de las características acústicas de la habitación. Continúa reproduciendo y vuelve a grabar su voz, sobre y sobre, hasta que su discurso se suaviza, casi se disuelve, en los reflejos sónicos de la habitación en la que se grabó y se volvió a grabar la pieza.

Una forma efectiva de estudiar una pieza es replicar sus aspectos técnicos y los dispositivos involucrados. El objetivo de esta actividad es recrear la configuración técnica de *Estoy Sentado en una hábita*, centrándose en los procesos de grabación, reproducción y automatización.

Hay muchas formas de implementar este sistema técnico. Solo para mencionar dos entornos con los que estamos trabajando actualmente: es relativamente sencillo en **datos puros**.

En términos de hardware, además de una computadora, necesitará un **Vocero** (salida de audio mono), un **micrófono** (entrada de audio mono) y un **hábitaciónem-revernera**.

El sistema debe incluir al menos dos controles manuales (no automatizados):

1. Empiece a grabar
2. Deja de grabar

Elija una habitación cuyas cualidades acústicas o musicales le gustaría evocar. Conecte el micrófono a la entrada de la grabadora de cinta #1. Desde la salida de la grabadora de cinta #2, conéctese a un amplificador y altavoz. Use el siguiente texto o cualquier otro texto de cualquier longitud:

> *Estoy sentado en una habitación diferente de la que se encuentra ahora. Estoy grabando el sonido de mi voz hablante, y lo volveré a tocar en la habitación una y otra vez hasta que las frecuencias resonantes de la sala se refuerzan para que se destruya cualquier apariencia de mi discurso, con la excepción del ritmo. Lo que escuchará, entonces, son las frecuencias resonantes naturales de la sala articuladas por el habla. Considero esta actividad no tanto como una demostración de un hecho físico, sino más bien como una forma de suavizar cualquier irregularidad que mi discurso pueda tener.*


Los siguientes pasos describen el proceso:

- Grabe su voz a través del micrófono en la grabadora de cinta #1.
- Retroceda la cinta, la transfiera a la grabadora n. ° 2 y vuelva a reproducirla en la habitación a través del altavoz. - Registre una segunda generación de la declaración a través del micrófono nuevamente en la grabadora de cinta #1.
- Retroceda esta segunda generación hasta el principio y la emplome al final de la declaración original en la grabadora #2.
- Reproducir solo la segunda generación en la sala y grabe una tercera generación en la grabadora de cinta #1.
- Continúe este proceso a través de múltiples generaciones.

Todas las generaciones grabadas, presentadas en orden cronológico, crean una composición de cinta cuya duración está determinada por la duración de la declaración original y el número de generaciones producidas. Haga versiones en las que se recicle una sola declaración a través de diferentes habitaciones. Cree versiones que usen uno o más altavoces en diferentes idiomas y espacios. Pruebe versiones donde, para cada generación, el micrófono se mueva a diferentes partes de la (s) habitación (s). También puede desarrollar versiones que se puedan realizar en tiempo real.

### Pure Data implementation of *Estoy sentado en una habitación*

& nbsp;

![Implementación de datos puros de Iro Siento en una habitación](/assets/screenshots/playrec/sitting.png)

En esta sección, desglosaremos el parche de datos puro [`I-Am-Siting-in-Aroom.pd`](/assets/code/playrec/I-am-sitting-in-a-room.pd) paso a paso. Este parche está inspirado en la pieza icónica de Alvin Lucier y demuestra cómo grabar y reproducir recursivamente el sonido para revelar las frecuencias resonantes de una habitación.

#### Resumen conceptual

El parche te permite:

- Grabe su voz o cualquier sonido en una habitación.
- Reproduzca la grabación en la habitación y vuelva a grabarla.
- Repita este proceso, para que las resonancias de la habitación se vuelvan más pronunciadas con cada generación.

### Diagrama del sistema

El siguiente diagrama ilustra la naturaleza recursiva del proceso de grabación y reproducción, similar a cómo se desarrolla la pieza de Lucier. Cada generación de grabadoras captura la anterior, creando un bucle de retroalimentación que enfatiza las resonancias de la habitación.

```{mermaid}
flowchart TB
  %% Top level source
  Input[Microphone]

  subgraph PLAYBACK RECORDERS
    direction LR
    subgraph RecorderA [DEVICE A]
      RecordA[Record A.wav]
      PlayA[Play A.wav]
      RecordA -.-> PlayA
    end
    
    subgraph RecorderB [DEVICE B]
      RecordB[Record B.wav]
      PlayB[Play B.wav]
      RecordB -.->PlayB
    end
  end
  
  %% Output at the bottom  
  Output((Speaker))
  
  %% Clear connections showing signal flow
  start([1-start]) --> RecordA
  stop([2-stop]) --> RecordA
  stop([2-stop]) --> RecordB
  stop([2-stop]) --> PlayA

  Input ==> RecordA
  Input ==> RecordB

  PlayA ==> Output
  PlayB ==> Output
  
  %% Feedback path showing recursion
  PlayB -.->|"Trigger to<br> start recording"| RecordA
  PlayA -.->|"Trigger to<br> start recording"| RecordB
  Output ==> room["ROOM'S<br>REFLECTIONS"]:::roomStyle ==> Input

  classDef roomStyle fill:#f5f5f5,stroke:#333,stroke-dasharray:5 5 
```

& nbsp;

El siguiente diagrama de secuencia ilustra el proceso de grabación y reproducción en el parche. Muestra cómo la entrada de audio se captura, graba, reproduce y se vuelve a grabar en un bucle, enfatizando las resonancias de la habitación.

:::{.column-page-inset}
<<CODEBLOCK_1>>
:::

### Paso 1: Entrada y enrutamiento de audio

- **`adc~`** recibe audio de su micrófono.
- La señal se envía a **`s~ audio.input`**, lo que la pone a disposición de otras partes del parche.
- Este enrutamiento modular permite que se use la misma entrada para las cadenas de grabación y reproducción.

### Paso 2: Grabación de su voz (Record-a.wav)

- Presione el botón **Comenzar un botón Grabar** (`bng` etiquetado como "iniciar grabación").
- Esto desencadena un mensaje:
`open record-A.wav, start` → **`writesf~`**
- El audio entrante de su micrófono ahora se está registrando para `record-A.wav`.
- Presione el botón **Dejar de Grabar** (`bng` etiquetado como "parar grabación") para enviar el mensaje `stop`, finalizando la grabación.

### Paso 3: Reproducción y re-grabación (Record-B.Wav)

- Para reproducir su grabación, otro botón desencadene:
`open record-A.wav, start` → **`readsf~`**
- La señal de reproducción se enruta a:
- **`throw~ audio`** (para que lo escuches a través de los altavoces)
- **`writesf~`** (grabando a `record-B.wav`)
- Esto significa que la reproducción de su primera grabación se vuelve a grabar, capturando tanto el sonido original como la respuesta de la habitación.

### Paso 4: proceso recursivo

- Puede repetir el proceso:
- Reproducir `record-B.wav` y grabarlo nuevamente, cada vez que refuerza las resonancias de la habitación.
- Cada iteración hace que el discurso sea menos inteligible y las frecuencias resonantes de la habitación sean más prominentes, al igual que en la pieza de Lucier.

### Paso 5: Salida

- Todo el audio enrutado a **`throw~ audio`** se recopila por **`catch~ audio`** y se envía a **`dac~`** para reproducir a través de sus altavoces o auriculares.

### tabla de objetos clave

| Objeto | Propósito |
| ---------------- | ---------------------------------------------- |
| `adc~` | Entrada de audio del micrófono |
| `writesf~` | Grabe audio en un archivo |
| `readsf~` | Reproducir audio desde un archivo |
| `throw~`/`catch~` | Mezclar y enrutar señales de audio |
| `dac~` | Salida de audio a los altavoces |
| `bng` | Botón para actividades de activación |
| `msg` | Enviar comandos a los objetos (abrir, iniciar, detener) |

### Cómo usar el parche

1. **Comience a grabar:**
Haga clic en el botón "Iniciar grabación" y hable o haga un sonido.
2. **Deja de grabar:**
Haga clic en el botón "Detener la grabación" para finalizar.
3. **Reproducción y volver a grabar:**
Use el botón de reproducción para reproducir su grabación en la habitación y volver a grabarlo simultáneamente.
4. **Repetir:**
Repita el proceso de reproducción y re-grabación tantas veces como desee escuchar que surgen las resonancias de la habitación.

Este parche es una forma práctica y creativa de explorar fenómenos acústicos y la transformación del sonido a través de la grabación recursiva, haciéndose eco del espíritu del trabajo original de Lucier.


## Estoy sentado en un [Freeverb ~] - Tutorial de parche

El parche [I-am-siting-in-a-room freeverb.pd](/assets/code/playrec/I-am-sitting-in-a-room-freeverb.pd) extiende el concepto original*Estoy Sentado en una hábitacia*introduciendo un **entorno acústico virtual** usando reverb y permitiendo **entrada de audio pregrabada** en lugar de solo entrada de micrófono en vivo. Esta adaptación proporciona una flexibilidad más creativa y resultados consistentes en comparación con el uso de una habitación física.

![Implementación de datos puros de Iro Siento en una habitación con Freeverb](/assets/screenshots/playrec/sitting-freeverb.png)

Este parche está diseñado para simular el proceso de grabación recursivo de la pieza de Lucier, al tiempo que permite un mayor control sobre el entorno de sonido. Utiliza el objeto `freeverb~` para crear un efecto de habitación virtual, lo que le permite manipular las características acústicas del sonido sin depender de un espacio físico.

### Descripción general conceptual

El parche te permite:
- Use un archivo de audio pregrabado o una entrada en vivo como su material fuente
- Agregar reverbe artificial para simular las características de la habitación
- Siga el mismo proceso de grabación recursivo que el original
- lograr resultados más controlados y repetibles

### Diagrama del sistema

```{mermaid}
flowchart TB
  %% Top level source
  AudioFile[Audio File]
  
  %% Horizontal arrangement of recorders A and B
  subgraph PLAYBACK RECORDERS
    direction LR
    subgraph RecorderA [DEVICE A]
      RecordA[writesf~ A.wav]
      PlayA[readsf~ A.wav]
      RecordA ==> PlayA
    end
    
    subgraph RecorderB [DEVICE B]
      RecordB[writesf~ B.wav]
      PlayB[readsf~ B.wav]
      RecordB ==> PlayB
    end
  end
  
  subgraph VIRTUAL ROOM
  %% Reverb block in the middle
    VirtualRoom(((freeverb~<br>Virtual Room)))
  end  
  
  %% Output at the bottom  
  Output[dac~]
  
  %% Clear connections showing signal flow
  AudioFile --> RecordA
  AudioFile --> Output
  
  PlayA ==> VirtualRoom
  PlayB ==> VirtualRoom
  
  VirtualRoom ==> RecordB
  VirtualRoom ==> RecordA
  VirtualRoom --> Output
  
  %% Feedback path showing recursion
  PlayB -.->|"Trigger to<br> start recording"| RecordA
  PlayA -.->|"Trigger to<br> start recording"| RecordB
```

Este diagrama ilustra la naturaleza recursiva del proceso de grabación y reproducción, similar a cómo se desarrolla la pieza de Lucier. Cada generación de grabadoras captura la anterior, creando un bucle de retroalimentación que enfatiza las resonancias de la habitación.

### Características únicas de la versión [Freeverb ~]

#### 1. Entrada de archivo de audio

A diferencia del parche original que solo usa entrada de micrófono, esta versión puede:

- reproducir un archivo de audio pregrabado (`speech.wav`) como la fuente inicial
- Procese este archivo a través de reverb antes de grabar
- Ratiguear con un botón (etiquetado "2. Audio de reproducción")

```{mermaid}
flowchart LR
    bng([bng]) --> msg["msg open speech.wav, 1"]
    msg --> readsf["readsf~"]
    readsf --> freeverb["freeverb~"]
    freeverb --> send["s~ audio.input"]
```

#### 2. Entorno acústico virtual

En lugar de confiar en la acústica de una sala física, este parche usa `freeverb~` objetos para crear un espacio acústico simulado:

- Cada señal de audio (entrada y reproducción) pasa a través de un objeto `freeverb~`
- Esto crea una reverberación constante que se puede ajustar y controlar
- múltiples `freeverb~` Los objetos procesan diferentes etapas del audio para efectos acumulativos

#### 3. Flujo de control mejorado

El parche incluye controles numerados para un mejor flujo de trabajo:

| Botón | Etiqueta | Función |
| -------- | ------- | ---------- |
| 1 | Comience a grabar | Comienza a grabar la fuente de entrada a Regy-A.Wav |
| 2 | Audio de reproducción | Reproduce el archivo Speace.wav a través de la reverb en el sistema |
| 3 | Deja de grabar | Detiene el proceso de grabación actual |

#### 4. Múltiples rutas de envío/recepción

El parche utiliza pares de envío/recepción adicionales para administrar el enrutamiento de la señal:

- `s~/r~ audio.input` - rutas señales de entrada al objeto de grabación
- `s~/r~ player.A` - enruta la reproducción del archivo A al registrador B
- `s~/r~ player.B` - ruta la reproducción de la reproducción del archivo B al grabador A
- `throw~/catch~ audio` - recopila todas las señales que se enviarán a la salida


### Explicación paso a paso

#### Paso 1: Opciones iniciales de fuente de audio

Este parche proporciona dos fuentes posibles para la grabación inicial:

1. **Entrada de archivo pregrabado:**
- Haga clic en el botón "2. Audio de reproducción" para reproducir `speech.wav`
- El archivo se reproduce a través de `readsf~`, procesado por `freeverb~`, y se envía a `s~ audio.input`

2. **Entrada en Vivo:** (no se muestra explícitamente en esta versión pero podría agregarse usando `adc~`)
- Cualquier señal enviada a `s~ audio.input` se grabará cuando se inicie la grabación

#### Paso 2: Registro de la primera generación

- Haga clic en "1. Comience a grabar" para comenzar a grabar a `record-A.wav`
- La señal de `s~ audio.input` es capturada por `r~ audio.input` y se envía a `writesf~`
- El archivo resultante contiene su material fuente con reverberación inicial aplicada

#### Paso 3: reproducción y re-grabación

- Después de dejar de grabar con "3. Stop grabación", el parche automáticamente:
- Abre y reproduce `record-A.wav` a través de `readsf~`
- lo procesa a través de otro `freeverb~` para reverberación adicional
- lo envía a ambos `throw~ audio` (para monitoreo) y `s~ player.A`
- La señal `player.A` se recibe y se registra en `record-B.wav`

#### Paso 4: proceso recursivo

- Cuando se crea `record-B.wav`, se puede reproducir a través de otro `readsf~`
- Esta señal también se procesa por `freeverb~`
- La salida se envía a ambos `throw~ audio` y `s~ player.B`
- La señal `player.B` podría recibirse y registrarse a `record-A.wav`
- Este ciclo puede continuar, con cada generación acumulando más características de la sala virtual

#### Paso 5: Salida

- Todas las señales de audio enviadas a `throw~ audio` son recolectadas por `catch~ audio`
- La señal mixta se envía a `out~` para reproducir a través de altavoces/auriculares

### tabla de objetos clave

| Objeto | Propósito en este parche |
| -------- | ---------------------- |
| `freeverb~` | Crea acústica de habitación virtual agregando reverberación |
| `readsf~` | Reproduce archivos de audio (material fuente o generaciones anteriores) |
| `writesf~` | Registra audio a archivo (para cada generación) |
| `s~/r~` | Rutas de audio entre diferentes partes del parche |
| `throw~/catch~` | Mezcla y sale todas las señales de audio |
| `del` | Agrega pequeños retrasos para garantizar la secuenciación adecuada de las operaciones |
| `bng` | Proporciona botones para la interacción del usuario |
| `out~` | Envía audio a altavoces/auriculares |

### Aplicaciones creativas

- **Experante Con la Configuración de Reverb:** Pruebe diferentes tamaños de habitación, amortiguación y mezcla húmeda/seca
- **Utilice diferentes materiales de origen:** Test various speech samples, musical phrases, or sound effects
- **Cear Procesos Híbridos:** Registre la primera generación en una habitación real, luego cambie al entorno virtual
- **Construir SECUENCIAS Compositivas:** Capa de diferentes generaciones para crear texturas en evolución
- **Compare real vs. virtual:** Procese la misma fuente a través de los parches originales y libres para contrastar la acústica física y virtual

Este enfoque virtual ofrece un laboratorio controlado para explorar los conceptos centrales de la pieza de Lucier, lo que lo hace accesible incluso sin un espacio acústico ideal, al tiempo que abre nuevas posibilidades creativas que no serían posibles en una implementación física.

## Referencias {.unnumbered}